{"version":3,"file":"static/js/803.2c5906d6.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContatcList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx","pages/Pages.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 10px;\n  margin: 5px;\n  width: 400px;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  @media screen and (min-width: 320px) {\n    padding: 5px;\n\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px;\n\n    font-size: 16px;\n  }\n\n  margin-left: 5px;\n  /* margin-bottom: 10px; */\n  padding: 5px 10px;\n\n  text-decoration: none;\n\n  background-color: #e42114;\n  color: #ffffff;\n\n  border-radius: 4px;\n  border: transparent;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #860000;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n","import { useEffect } from 'react';\nimport { Button, ContactItem } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {filterContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => onDelete(id)}>\n            Delete contact\n          </Button>\n        </ContactItem>\n      ))}\n      {isLoading && <h1>Loading...</h1>}\n      {error && <h1>{error}</h1>}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-weight: 700;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  @media screen and (min-width: 320px) {\n    padding: 5px;\n\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px;\n\n    font-size: 16px;\n  }\n\n  margin-left: 5px;\n  margin-bottom: 10px;\n  padding: 5px 10px;\n\n  text-decoration: none;\n\n  background-color: #157c11;\n  color: #ffffff;\n\n  border-radius: 4px;\n  border: transparent;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  transition: all 250ms ease-in-out;\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\n\n// import { Input } from 'components/LoginForm/LoginForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = { id: nanoid(), name, number };\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === number\n      )\n    ) {\n      return alert(`${name} or ${number} is already in contacts`);\n    }\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Title } from './Pages.styled';\n\nconst { ContactList } = require('components/ContactList/ContatcList');\nconst { useEffect } = require('react');\nconst { Helmet } = require('react-helmet');\nconst { useDispatch, useSelector } = require('react-redux');\nconst { fetchContacts } = require('redux/contacts/operations');\nconst { selectIsLoading } = require('redux/contacts/selectors');\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <Title>Contacts</Title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const Title = styled.title`\n  color: #fff;\n  font-size: 48px;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 20px;\n  text-shadow: 0 0 10px #000;\n`;\n\nexport const SubTitle = styled.h2`\n  color: #fff;\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 20px;\n  text-shadow: 0 0 10px #000;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["ContactItem","styled","Button","ContactList","filterContacts","useSelector","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","useEffect","fetchContacts","map","id","name","number","type","onClick","deleteContact","onDelete","Form","Label","Input","ContactForm","useState","setName","setNumber","contacts","selectContacts","onChange","e","target","value","onSubmit","preventDefault","contact","nanoid","find","toLowerCase","alert","addContact","pattern","title","required","require","Helmet","Title","SubTitle","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","state","items","selectFilter","filter","includes"],"sourceRoot":""}